name: CI

on:
  push:
    branches-ignore:
      - 'release-*'
    tags-ignore:
      - '*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster:
        - {"version": "v1.11.10", "config": "kind.yaml"}
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Create Kubernetes ${{ matrix.cluster.version }} cluster
      id: kind
      uses: engineerd/setup-kind@v0.1.0
      with:
        version: v0.6.1
        config: hack/kubernetes/${{ matrix.cluster.config }}
        image: kindest/node:${{ matrix.cluster.version }}

    - name: Prepare cluster for testing
      id: local-path
      run: |
        echo
        kubectl version
        echo "waiting for nodes to be ready ..."
        kubectl wait --for=condition=Ready nodes --all --timeout=5m
        kubectl get nodes
        echo
        echo "installing local-path provisioner ..."
        kubectl delete storageclass --all
        kubectl apply -f https://github.com/kmodules/local-path-provisioner/raw/k-1.11/deploy/local-path-storage.yaml
        kubectl wait --for=condition=Ready pods -n local-path-storage --all --timeout=5m
        kubectl apply -f hack/kubernetes/storageclass/standard.yaml

    - name: Test
      run: |
        echo ">>> run pod"
        kubectl apply -f hack/kubernetes/pod.yaml
        echo ">>> get pod"
        for i in {1..12}; do kubectl get pod;echo;sleep 5; done
        echo
        echo ">>> get pod"
        kubectl get pod volume-test -o go-template="{{range .status.containerStatuses}}{{.lastState.terminated.message}}{{end}}"
        echo
        echo ">>> describe pod"
        kubectl get pod -n default volume-test -o yaml
        echo
        echo ">>> show pod logs"
        kubectl logs -n default volume-test
        echo
        kubectl get pvc -o yaml
        echo
        kubectl get pv -o yaml
        echo
        kubectl get nodes
